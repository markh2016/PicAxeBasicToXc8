Version 3.2 HI-TECH Software Intermediate Code
[v F38 `(v ~T0 @X0 1 tf1`ul ]
"12 /opt/microchip/mplabx/v6.05/packs/Microchip/PIC10-12Fxxx_DFP/1.5.61/xc8/pic/include/builtins.h
[v __delay `JF38 ~T0 @X0 0 e ]
[p i __delay ]
[p mainexit ]
"797 ../../../../opt/microchip/xc8/v2.41/pic/include/proc/pic12f675.h
[v _TRISIO `Vuc ~T0 @X0 0 e@133 ]
"1598
[v _GP3 `Vb ~T0 @X0 0 e@43 ]
"1601
[v _GP4 `Vb ~T0 @X0 0 e@44 ]
"1595
[v _GP2 `Vb ~T0 @X0 0 e@42 ]
"14 test2.c
[p x FOSC=INTRCIO ]
"15
[p x WDTE=OFF ]
"16
[p x PWRTE=OFF ]
"17
[p x MCLRE=OFF ]
"18
[p x BOREN=ON ]
"19
[p x CP=OFF ]
"20
[p x CPD=OFF ]
[; ;xc.h: 18: extern const char __xc8_OPTIM_SPEED;
[; ;xc.h: 20: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 28: typedef __int24 int24_t;
[; ;stdint.h: 36: typedef signed long int int32_t;
[; ;stdint.h: 52: typedef unsigned char uint8_t;
[; ;stdint.h: 58: typedef unsigned int uint16_t;
[; ;stdint.h: 65: typedef __uint24 uint24_t;
[; ;stdint.h: 72: typedef unsigned long int uint32_t;
[; ;stdint.h: 88: typedef signed char int_least8_t;
[; ;stdint.h: 96: typedef signed int int_least16_t;
[; ;stdint.h: 109: typedef __int24 int_least24_t;
[; ;stdint.h: 118: typedef signed long int int_least32_t;
[; ;stdint.h: 136: typedef unsigned char uint_least8_t;
[; ;stdint.h: 143: typedef unsigned int uint_least16_t;
[; ;stdint.h: 154: typedef __uint24 uint_least24_t;
[; ;stdint.h: 162: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 181: typedef signed char int_fast8_t;
[; ;stdint.h: 188: typedef signed int int_fast16_t;
[; ;stdint.h: 200: typedef __int24 int_fast24_t;
[; ;stdint.h: 208: typedef signed long int int_fast32_t;
[; ;stdint.h: 224: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 230: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 240: typedef __uint24 uint_fast24_t;
[; ;stdint.h: 247: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 268: typedef int32_t intmax_t;
[; ;stdint.h: 282: typedef uint32_t uintmax_t;
[; ;stdint.h: 289: typedef int16_t intptr_t;
[; ;stdint.h: 294: typedef uint16_t uintptr_t;
[; ;builtins.h: 8: extern void __nop(void);
[; ;builtins.h: 12: extern __nonreentrant void _delay(uint32_t);
[; ;builtins.h: 14: extern __nonreentrant void _delaywdt(uint32_t);
[; ;pic.h: 9: extern unsigned char __osccal_val(void);
[; ;pic12f675.h: 52: extern volatile unsigned char INDF __at(0x000);
"54 ../../../../opt/microchip/xc8/v2.41/pic/include/proc/pic12f675.h
[; ;pic12f675.h: 54: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic12f675.h: 57: typedef union {
[; ;pic12f675.h: 58: struct {
[; ;pic12f675.h: 59: unsigned INDF :8;
[; ;pic12f675.h: 60: };
[; ;pic12f675.h: 61: } INDFbits_t;
[; ;pic12f675.h: 62: extern volatile INDFbits_t INDFbits __at(0x000);
[; ;pic12f675.h: 72: extern volatile unsigned char TMR0 __at(0x001);
"74
[; ;pic12f675.h: 74: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic12f675.h: 77: typedef union {
[; ;pic12f675.h: 78: struct {
[; ;pic12f675.h: 79: unsigned TMR0 :8;
[; ;pic12f675.h: 80: };
[; ;pic12f675.h: 81: } TMR0bits_t;
[; ;pic12f675.h: 82: extern volatile TMR0bits_t TMR0bits __at(0x001);
[; ;pic12f675.h: 92: extern volatile unsigned char PCL __at(0x002);
"94
[; ;pic12f675.h: 94: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic12f675.h: 97: typedef union {
[; ;pic12f675.h: 98: struct {
[; ;pic12f675.h: 99: unsigned PCL :8;
[; ;pic12f675.h: 100: };
[; ;pic12f675.h: 101: } PCLbits_t;
[; ;pic12f675.h: 102: extern volatile PCLbits_t PCLbits __at(0x002);
[; ;pic12f675.h: 112: extern volatile unsigned char STATUS __at(0x003);
"114
[; ;pic12f675.h: 114: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic12f675.h: 117: typedef union {
[; ;pic12f675.h: 118: struct {
[; ;pic12f675.h: 119: unsigned C :1;
[; ;pic12f675.h: 120: unsigned DC :1;
[; ;pic12f675.h: 121: unsigned Z :1;
[; ;pic12f675.h: 122: unsigned nPD :1;
[; ;pic12f675.h: 123: unsigned nTO :1;
[; ;pic12f675.h: 124: unsigned RP :2;
[; ;pic12f675.h: 125: unsigned IRP :1;
[; ;pic12f675.h: 126: };
[; ;pic12f675.h: 127: struct {
[; ;pic12f675.h: 128: unsigned :5;
[; ;pic12f675.h: 129: unsigned RP0 :1;
[; ;pic12f675.h: 130: unsigned RP1 :1;
[; ;pic12f675.h: 131: };
[; ;pic12f675.h: 132: struct {
[; ;pic12f675.h: 133: unsigned CARRY :1;
[; ;pic12f675.h: 134: unsigned :1;
[; ;pic12f675.h: 135: unsigned ZERO :1;
[; ;pic12f675.h: 136: };
[; ;pic12f675.h: 137: } STATUSbits_t;
[; ;pic12f675.h: 138: extern volatile STATUSbits_t STATUSbits __at(0x003);
[; ;pic12f675.h: 198: extern volatile unsigned char FSR __at(0x004);
"200
[; ;pic12f675.h: 200: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic12f675.h: 203: typedef union {
[; ;pic12f675.h: 204: struct {
[; ;pic12f675.h: 205: unsigned FSR :8;
[; ;pic12f675.h: 206: };
[; ;pic12f675.h: 207: } FSRbits_t;
[; ;pic12f675.h: 208: extern volatile FSRbits_t FSRbits __at(0x004);
[; ;pic12f675.h: 218: extern volatile unsigned char GPIO __at(0x005);
"220
[; ;pic12f675.h: 220: asm("GPIO equ 05h");
[; <" GPIO equ 05h ;# ">
[; ;pic12f675.h: 223: typedef union {
[; ;pic12f675.h: 224: struct {
[; ;pic12f675.h: 225: unsigned GP0 :1;
[; ;pic12f675.h: 226: unsigned GP1 :1;
[; ;pic12f675.h: 227: unsigned GP2 :1;
[; ;pic12f675.h: 228: unsigned GP3 :1;
[; ;pic12f675.h: 229: unsigned GP4 :1;
[; ;pic12f675.h: 230: unsigned GP5 :1;
[; ;pic12f675.h: 231: };
[; ;pic12f675.h: 232: struct {
[; ;pic12f675.h: 233: unsigned GPIO0 :1;
[; ;pic12f675.h: 234: unsigned GPIO1 :1;
[; ;pic12f675.h: 235: unsigned GPIO2 :1;
[; ;pic12f675.h: 236: unsigned GPIO3 :1;
[; ;pic12f675.h: 237: unsigned GPIO4 :1;
[; ;pic12f675.h: 238: unsigned GPIO5 :1;
[; ;pic12f675.h: 239: };
[; ;pic12f675.h: 240: } GPIObits_t;
[; ;pic12f675.h: 241: extern volatile GPIObits_t GPIObits __at(0x005);
[; ;pic12f675.h: 306: extern volatile unsigned char PCLATH __at(0x00A);
"308
[; ;pic12f675.h: 308: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic12f675.h: 311: typedef union {
[; ;pic12f675.h: 312: struct {
[; ;pic12f675.h: 313: unsigned PCLATH :5;
[; ;pic12f675.h: 314: };
[; ;pic12f675.h: 315: } PCLATHbits_t;
[; ;pic12f675.h: 316: extern volatile PCLATHbits_t PCLATHbits __at(0x00A);
[; ;pic12f675.h: 326: extern volatile unsigned char INTCON __at(0x00B);
"328
[; ;pic12f675.h: 328: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic12f675.h: 331: typedef union {
[; ;pic12f675.h: 332: struct {
[; ;pic12f675.h: 333: unsigned GPIF :1;
[; ;pic12f675.h: 334: unsigned INTF :1;
[; ;pic12f675.h: 335: unsigned T0IF :1;
[; ;pic12f675.h: 336: unsigned GPIE :1;
[; ;pic12f675.h: 337: unsigned INTE :1;
[; ;pic12f675.h: 338: unsigned T0IE :1;
[; ;pic12f675.h: 339: unsigned PEIE :1;
[; ;pic12f675.h: 340: unsigned GIE :1;
[; ;pic12f675.h: 341: };
[; ;pic12f675.h: 342: struct {
[; ;pic12f675.h: 343: unsigned :2;
[; ;pic12f675.h: 344: unsigned TMR0IF :1;
[; ;pic12f675.h: 345: unsigned :2;
[; ;pic12f675.h: 346: unsigned TMR0IE :1;
[; ;pic12f675.h: 347: };
[; ;pic12f675.h: 348: } INTCONbits_t;
[; ;pic12f675.h: 349: extern volatile INTCONbits_t INTCONbits __at(0x00B);
[; ;pic12f675.h: 404: extern volatile unsigned char PIR1 __at(0x00C);
"406
[; ;pic12f675.h: 406: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic12f675.h: 409: typedef union {
[; ;pic12f675.h: 410: struct {
[; ;pic12f675.h: 411: unsigned TMR1IF :1;
[; ;pic12f675.h: 412: unsigned :2;
[; ;pic12f675.h: 413: unsigned CMIF :1;
[; ;pic12f675.h: 414: unsigned :2;
[; ;pic12f675.h: 415: unsigned ADIF :1;
[; ;pic12f675.h: 416: unsigned EEIF :1;
[; ;pic12f675.h: 417: };
[; ;pic12f675.h: 418: struct {
[; ;pic12f675.h: 419: unsigned T1IF :1;
[; ;pic12f675.h: 420: };
[; ;pic12f675.h: 421: } PIR1bits_t;
[; ;pic12f675.h: 422: extern volatile PIR1bits_t PIR1bits __at(0x00C);
[; ;pic12f675.h: 452: extern volatile unsigned short TMR1 __at(0x00E);
"454
[; ;pic12f675.h: 454: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic12f675.h: 459: extern volatile unsigned char TMR1L __at(0x00E);
"461
[; ;pic12f675.h: 461: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic12f675.h: 464: typedef union {
[; ;pic12f675.h: 465: struct {
[; ;pic12f675.h: 466: unsigned TMR1L :8;
[; ;pic12f675.h: 467: };
[; ;pic12f675.h: 468: } TMR1Lbits_t;
[; ;pic12f675.h: 469: extern volatile TMR1Lbits_t TMR1Lbits __at(0x00E);
[; ;pic12f675.h: 479: extern volatile unsigned char TMR1H __at(0x00F);
"481
[; ;pic12f675.h: 481: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic12f675.h: 484: typedef union {
[; ;pic12f675.h: 485: struct {
[; ;pic12f675.h: 486: unsigned TMR1H :8;
[; ;pic12f675.h: 487: };
[; ;pic12f675.h: 488: } TMR1Hbits_t;
[; ;pic12f675.h: 489: extern volatile TMR1Hbits_t TMR1Hbits __at(0x00F);
[; ;pic12f675.h: 499: extern volatile unsigned char T1CON __at(0x010);
"501
[; ;pic12f675.h: 501: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic12f675.h: 504: typedef union {
[; ;pic12f675.h: 505: struct {
[; ;pic12f675.h: 506: unsigned TMR1ON :1;
[; ;pic12f675.h: 507: unsigned TMR1CS :1;
[; ;pic12f675.h: 508: unsigned nT1SYNC :1;
[; ;pic12f675.h: 509: unsigned T1OSCEN :1;
[; ;pic12f675.h: 510: unsigned T1CKPS :2;
[; ;pic12f675.h: 511: unsigned TMR1GE :1;
[; ;pic12f675.h: 512: };
[; ;pic12f675.h: 513: struct {
[; ;pic12f675.h: 514: unsigned :4;
[; ;pic12f675.h: 515: unsigned T1CKPS0 :1;
[; ;pic12f675.h: 516: unsigned T1CKPS1 :1;
[; ;pic12f675.h: 517: };
[; ;pic12f675.h: 518: } T1CONbits_t;
[; ;pic12f675.h: 519: extern volatile T1CONbits_t T1CONbits __at(0x010);
[; ;pic12f675.h: 564: extern volatile unsigned char CMCON __at(0x019);
"566
[; ;pic12f675.h: 566: asm("CMCON equ 019h");
[; <" CMCON equ 019h ;# ">
[; ;pic12f675.h: 569: typedef union {
[; ;pic12f675.h: 570: struct {
[; ;pic12f675.h: 571: unsigned CM :3;
[; ;pic12f675.h: 572: unsigned CIS :1;
[; ;pic12f675.h: 573: unsigned CINV :1;
[; ;pic12f675.h: 574: unsigned :1;
[; ;pic12f675.h: 575: unsigned COUT :1;
[; ;pic12f675.h: 576: };
[; ;pic12f675.h: 577: struct {
[; ;pic12f675.h: 578: unsigned CM0 :1;
[; ;pic12f675.h: 579: unsigned CM1 :1;
[; ;pic12f675.h: 580: unsigned CM2 :1;
[; ;pic12f675.h: 581: };
[; ;pic12f675.h: 582: } CMCONbits_t;
[; ;pic12f675.h: 583: extern volatile CMCONbits_t CMCONbits __at(0x019);
[; ;pic12f675.h: 623: extern volatile unsigned char ADRESH __at(0x01E);
"625
[; ;pic12f675.h: 625: asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
[; ;pic12f675.h: 628: typedef union {
[; ;pic12f675.h: 629: struct {
[; ;pic12f675.h: 630: unsigned ADRESH :8;
[; ;pic12f675.h: 631: };
[; ;pic12f675.h: 632: } ADRESHbits_t;
[; ;pic12f675.h: 633: extern volatile ADRESHbits_t ADRESHbits __at(0x01E);
[; ;pic12f675.h: 643: extern volatile unsigned char ADCON0 __at(0x01F);
"645
[; ;pic12f675.h: 645: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic12f675.h: 648: typedef union {
[; ;pic12f675.h: 649: struct {
[; ;pic12f675.h: 650: unsigned ADON :1;
[; ;pic12f675.h: 651: unsigned GO_nDONE :1;
[; ;pic12f675.h: 652: unsigned CHS :2;
[; ;pic12f675.h: 653: unsigned :2;
[; ;pic12f675.h: 654: unsigned VCFG :1;
[; ;pic12f675.h: 655: unsigned ADFM :1;
[; ;pic12f675.h: 656: };
[; ;pic12f675.h: 657: struct {
[; ;pic12f675.h: 658: unsigned :1;
[; ;pic12f675.h: 659: unsigned GO_DONE :1;
[; ;pic12f675.h: 660: unsigned CHS0 :1;
[; ;pic12f675.h: 661: unsigned CHS1 :1;
[; ;pic12f675.h: 662: };
[; ;pic12f675.h: 663: struct {
[; ;pic12f675.h: 664: unsigned :1;
[; ;pic12f675.h: 665: unsigned nDONE :1;
[; ;pic12f675.h: 666: };
[; ;pic12f675.h: 667: struct {
[; ;pic12f675.h: 668: unsigned :1;
[; ;pic12f675.h: 669: unsigned GO :1;
[; ;pic12f675.h: 670: };
[; ;pic12f675.h: 671: } ADCON0bits_t;
[; ;pic12f675.h: 672: extern volatile ADCON0bits_t ADCON0bits __at(0x01F);
[; ;pic12f675.h: 727: extern volatile unsigned char OPTION_REG __at(0x081);
"729
[; ;pic12f675.h: 729: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic12f675.h: 732: typedef union {
[; ;pic12f675.h: 733: struct {
[; ;pic12f675.h: 734: unsigned PS :3;
[; ;pic12f675.h: 735: unsigned PSA :1;
[; ;pic12f675.h: 736: unsigned T0SE :1;
[; ;pic12f675.h: 737: unsigned T0CS :1;
[; ;pic12f675.h: 738: unsigned INTEDG :1;
[; ;pic12f675.h: 739: unsigned nGPPU :1;
[; ;pic12f675.h: 740: };
[; ;pic12f675.h: 741: struct {
[; ;pic12f675.h: 742: unsigned PS0 :1;
[; ;pic12f675.h: 743: unsigned PS1 :1;
[; ;pic12f675.h: 744: unsigned PS2 :1;
[; ;pic12f675.h: 745: };
[; ;pic12f675.h: 746: } OPTION_REGbits_t;
[; ;pic12f675.h: 747: extern volatile OPTION_REGbits_t OPTION_REGbits __at(0x081);
[; ;pic12f675.h: 797: extern volatile unsigned char TRISIO __at(0x085);
"799
[; ;pic12f675.h: 799: asm("TRISIO equ 085h");
[; <" TRISIO equ 085h ;# ">
[; ;pic12f675.h: 802: typedef union {
[; ;pic12f675.h: 803: struct {
[; ;pic12f675.h: 804: unsigned TRISIO0 :1;
[; ;pic12f675.h: 805: unsigned TRISIO1 :1;
[; ;pic12f675.h: 806: unsigned TRISIO2 :1;
[; ;pic12f675.h: 807: unsigned TRISIO3 :1;
[; ;pic12f675.h: 808: unsigned TRISIO4 :1;
[; ;pic12f675.h: 809: unsigned TRISIO5 :1;
[; ;pic12f675.h: 810: };
[; ;pic12f675.h: 811: } TRISIObits_t;
[; ;pic12f675.h: 812: extern volatile TRISIObits_t TRISIObits __at(0x085);
[; ;pic12f675.h: 847: extern volatile unsigned char PIE1 __at(0x08C);
"849
[; ;pic12f675.h: 849: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic12f675.h: 852: typedef union {
[; ;pic12f675.h: 853: struct {
[; ;pic12f675.h: 854: unsigned TMR1IE :1;
[; ;pic12f675.h: 855: unsigned :2;
[; ;pic12f675.h: 856: unsigned CMIE :1;
[; ;pic12f675.h: 857: unsigned :2;
[; ;pic12f675.h: 858: unsigned ADIE :1;
[; ;pic12f675.h: 859: unsigned EEIE :1;
[; ;pic12f675.h: 860: };
[; ;pic12f675.h: 861: struct {
[; ;pic12f675.h: 862: unsigned T1IE :1;
[; ;pic12f675.h: 863: };
[; ;pic12f675.h: 864: } PIE1bits_t;
[; ;pic12f675.h: 865: extern volatile PIE1bits_t PIE1bits __at(0x08C);
[; ;pic12f675.h: 895: extern volatile unsigned char PCON __at(0x08E);
"897
[; ;pic12f675.h: 897: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic12f675.h: 900: typedef union {
[; ;pic12f675.h: 901: struct {
[; ;pic12f675.h: 902: unsigned nBOR :1;
[; ;pic12f675.h: 903: unsigned nPOR :1;
[; ;pic12f675.h: 904: };
[; ;pic12f675.h: 905: struct {
[; ;pic12f675.h: 906: unsigned nBOD :1;
[; ;pic12f675.h: 907: };
[; ;pic12f675.h: 908: } PCONbits_t;
[; ;pic12f675.h: 909: extern volatile PCONbits_t PCONbits __at(0x08E);
[; ;pic12f675.h: 929: extern volatile unsigned char OSCCAL __at(0x090);
"931
[; ;pic12f675.h: 931: asm("OSCCAL equ 090h");
[; <" OSCCAL equ 090h ;# ">
[; ;pic12f675.h: 934: typedef union {
[; ;pic12f675.h: 935: struct {
[; ;pic12f675.h: 936: unsigned :2;
[; ;pic12f675.h: 937: unsigned CAL :6;
[; ;pic12f675.h: 938: };
[; ;pic12f675.h: 939: struct {
[; ;pic12f675.h: 940: unsigned :2;
[; ;pic12f675.h: 941: unsigned CAL0 :1;
[; ;pic12f675.h: 942: unsigned CAL1 :1;
[; ;pic12f675.h: 943: unsigned CAL2 :1;
[; ;pic12f675.h: 944: unsigned CAL3 :1;
[; ;pic12f675.h: 945: unsigned CAL4 :1;
[; ;pic12f675.h: 946: unsigned CAL5 :1;
[; ;pic12f675.h: 947: };
[; ;pic12f675.h: 948: } OSCCALbits_t;
[; ;pic12f675.h: 949: extern volatile OSCCALbits_t OSCCALbits __at(0x090);
[; ;pic12f675.h: 989: extern volatile unsigned char WPU __at(0x095);
"991
[; ;pic12f675.h: 991: asm("WPU equ 095h");
[; <" WPU equ 095h ;# ">
[; ;pic12f675.h: 994: typedef union {
[; ;pic12f675.h: 995: struct {
[; ;pic12f675.h: 996: unsigned WPU0 :1;
[; ;pic12f675.h: 997: unsigned WPU1 :1;
[; ;pic12f675.h: 998: unsigned WPU2 :1;
[; ;pic12f675.h: 999: unsigned :1;
[; ;pic12f675.h: 1000: unsigned WPU4 :1;
[; ;pic12f675.h: 1001: unsigned WPU5 :1;
[; ;pic12f675.h: 1002: };
[; ;pic12f675.h: 1003: } WPUbits_t;
[; ;pic12f675.h: 1004: extern volatile WPUbits_t WPUbits __at(0x095);
[; ;pic12f675.h: 1034: extern volatile unsigned char IOC __at(0x096);
"1036
[; ;pic12f675.h: 1036: asm("IOC equ 096h");
[; <" IOC equ 096h ;# ">
[; ;pic12f675.h: 1039: extern volatile unsigned char IOCB __at(0x096);
"1041
[; ;pic12f675.h: 1041: asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
[; ;pic12f675.h: 1044: typedef union {
[; ;pic12f675.h: 1045: struct {
[; ;pic12f675.h: 1046: unsigned IOC0 :1;
[; ;pic12f675.h: 1047: unsigned IOC1 :1;
[; ;pic12f675.h: 1048: unsigned IOC2 :1;
[; ;pic12f675.h: 1049: unsigned IOC3 :1;
[; ;pic12f675.h: 1050: unsigned IOC4 :1;
[; ;pic12f675.h: 1051: unsigned IOC5 :1;
[; ;pic12f675.h: 1052: };
[; ;pic12f675.h: 1053: struct {
[; ;pic12f675.h: 1054: unsigned IOCB0 :1;
[; ;pic12f675.h: 1055: unsigned IOCB1 :1;
[; ;pic12f675.h: 1056: unsigned IOCB2 :1;
[; ;pic12f675.h: 1057: unsigned IOCB3 :1;
[; ;pic12f675.h: 1058: unsigned IOCB4 :1;
[; ;pic12f675.h: 1059: unsigned IOCB5 :1;
[; ;pic12f675.h: 1060: };
[; ;pic12f675.h: 1061: } IOCbits_t;
[; ;pic12f675.h: 1062: extern volatile IOCbits_t IOCbits __at(0x096);
[; ;pic12f675.h: 1125: typedef union {
[; ;pic12f675.h: 1126: struct {
[; ;pic12f675.h: 1127: unsigned IOC0 :1;
[; ;pic12f675.h: 1128: unsigned IOC1 :1;
[; ;pic12f675.h: 1129: unsigned IOC2 :1;
[; ;pic12f675.h: 1130: unsigned IOC3 :1;
[; ;pic12f675.h: 1131: unsigned IOC4 :1;
[; ;pic12f675.h: 1132: unsigned IOC5 :1;
[; ;pic12f675.h: 1133: };
[; ;pic12f675.h: 1134: struct {
[; ;pic12f675.h: 1135: unsigned IOCB0 :1;
[; ;pic12f675.h: 1136: unsigned IOCB1 :1;
[; ;pic12f675.h: 1137: unsigned IOCB2 :1;
[; ;pic12f675.h: 1138: unsigned IOCB3 :1;
[; ;pic12f675.h: 1139: unsigned IOCB4 :1;
[; ;pic12f675.h: 1140: unsigned IOCB5 :1;
[; ;pic12f675.h: 1141: };
[; ;pic12f675.h: 1142: } IOCBbits_t;
[; ;pic12f675.h: 1143: extern volatile IOCBbits_t IOCBbits __at(0x096);
[; ;pic12f675.h: 1208: extern volatile unsigned char VRCON __at(0x099);
"1210
[; ;pic12f675.h: 1210: asm("VRCON equ 099h");
[; <" VRCON equ 099h ;# ">
[; ;pic12f675.h: 1213: typedef union {
[; ;pic12f675.h: 1214: struct {
[; ;pic12f675.h: 1215: unsigned VR :4;
[; ;pic12f675.h: 1216: unsigned :1;
[; ;pic12f675.h: 1217: unsigned VRR :1;
[; ;pic12f675.h: 1218: unsigned :1;
[; ;pic12f675.h: 1219: unsigned VREN :1;
[; ;pic12f675.h: 1220: };
[; ;pic12f675.h: 1221: struct {
[; ;pic12f675.h: 1222: unsigned VR0 :1;
[; ;pic12f675.h: 1223: unsigned VR1 :1;
[; ;pic12f675.h: 1224: unsigned VR2 :1;
[; ;pic12f675.h: 1225: unsigned VR3 :1;
[; ;pic12f675.h: 1226: };
[; ;pic12f675.h: 1227: } VRCONbits_t;
[; ;pic12f675.h: 1228: extern volatile VRCONbits_t VRCONbits __at(0x099);
[; ;pic12f675.h: 1268: extern volatile unsigned char EEDATA __at(0x09A);
"1270
[; ;pic12f675.h: 1270: asm("EEDATA equ 09Ah");
[; <" EEDATA equ 09Ah ;# ">
[; ;pic12f675.h: 1273: extern volatile unsigned char EEDAT __at(0x09A);
"1275
[; ;pic12f675.h: 1275: asm("EEDAT equ 09Ah");
[; <" EEDAT equ 09Ah ;# ">
[; ;pic12f675.h: 1278: typedef union {
[; ;pic12f675.h: 1279: struct {
[; ;pic12f675.h: 1280: unsigned EEDATA :8;
[; ;pic12f675.h: 1281: };
[; ;pic12f675.h: 1282: } EEDATAbits_t;
[; ;pic12f675.h: 1283: extern volatile EEDATAbits_t EEDATAbits __at(0x09A);
[; ;pic12f675.h: 1291: typedef union {
[; ;pic12f675.h: 1292: struct {
[; ;pic12f675.h: 1293: unsigned EEDATA :8;
[; ;pic12f675.h: 1294: };
[; ;pic12f675.h: 1295: } EEDATbits_t;
[; ;pic12f675.h: 1296: extern volatile EEDATbits_t EEDATbits __at(0x09A);
[; ;pic12f675.h: 1306: extern volatile unsigned char EEADR __at(0x09B);
"1308
[; ;pic12f675.h: 1308: asm("EEADR equ 09Bh");
[; <" EEADR equ 09Bh ;# ">
[; ;pic12f675.h: 1311: typedef union {
[; ;pic12f675.h: 1312: struct {
[; ;pic12f675.h: 1313: unsigned EEADR :7;
[; ;pic12f675.h: 1314: };
[; ;pic12f675.h: 1315: } EEADRbits_t;
[; ;pic12f675.h: 1316: extern volatile EEADRbits_t EEADRbits __at(0x09B);
[; ;pic12f675.h: 1326: extern volatile unsigned char EECON1 __at(0x09C);
"1328
[; ;pic12f675.h: 1328: asm("EECON1 equ 09Ch");
[; <" EECON1 equ 09Ch ;# ">
[; ;pic12f675.h: 1331: typedef union {
[; ;pic12f675.h: 1332: struct {
[; ;pic12f675.h: 1333: unsigned RD :1;
[; ;pic12f675.h: 1334: unsigned WR :1;
[; ;pic12f675.h: 1335: unsigned WREN :1;
[; ;pic12f675.h: 1336: unsigned WRERR :1;
[; ;pic12f675.h: 1337: };
[; ;pic12f675.h: 1338: } EECON1bits_t;
[; ;pic12f675.h: 1339: extern volatile EECON1bits_t EECON1bits __at(0x09C);
[; ;pic12f675.h: 1364: extern volatile unsigned char EECON2 __at(0x09D);
"1366
[; ;pic12f675.h: 1366: asm("EECON2 equ 09Dh");
[; <" EECON2 equ 09Dh ;# ">
[; ;pic12f675.h: 1369: typedef union {
[; ;pic12f675.h: 1370: struct {
[; ;pic12f675.h: 1371: unsigned EECON2 :8;
[; ;pic12f675.h: 1372: };
[; ;pic12f675.h: 1373: } EECON2bits_t;
[; ;pic12f675.h: 1374: extern volatile EECON2bits_t EECON2bits __at(0x09D);
[; ;pic12f675.h: 1384: extern volatile unsigned char ADRESL __at(0x09E);
"1386
[; ;pic12f675.h: 1386: asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
[; ;pic12f675.h: 1389: typedef union {
[; ;pic12f675.h: 1390: struct {
[; ;pic12f675.h: 1391: unsigned ADRESL :8;
[; ;pic12f675.h: 1392: };
[; ;pic12f675.h: 1393: } ADRESLbits_t;
[; ;pic12f675.h: 1394: extern volatile ADRESLbits_t ADRESLbits __at(0x09E);
[; ;pic12f675.h: 1404: extern volatile unsigned char ANSEL __at(0x09F);
"1406
[; ;pic12f675.h: 1406: asm("ANSEL equ 09Fh");
[; <" ANSEL equ 09Fh ;# ">
[; ;pic12f675.h: 1409: typedef union {
[; ;pic12f675.h: 1410: struct {
[; ;pic12f675.h: 1411: unsigned ANS :4;
[; ;pic12f675.h: 1412: unsigned ADCS :3;
[; ;pic12f675.h: 1413: };
[; ;pic12f675.h: 1414: struct {
[; ;pic12f675.h: 1415: unsigned ANS0 :1;
[; ;pic12f675.h: 1416: unsigned ANS1 :1;
[; ;pic12f675.h: 1417: unsigned ANS2 :1;
[; ;pic12f675.h: 1418: unsigned ANS3 :1;
[; ;pic12f675.h: 1419: unsigned ADCS0 :1;
[; ;pic12f675.h: 1420: unsigned ADCS1 :1;
[; ;pic12f675.h: 1421: unsigned ADCS2 :1;
[; ;pic12f675.h: 1422: };
[; ;pic12f675.h: 1423: } ANSELbits_t;
[; ;pic12f675.h: 1424: extern volatile ANSELbits_t ANSELbits __at(0x09F);
[; ;pic12f675.h: 1484: extern volatile __bit ADCS0 __at(0x4FC);
[; ;pic12f675.h: 1487: extern volatile __bit ADCS1 __at(0x4FD);
[; ;pic12f675.h: 1490: extern volatile __bit ADCS2 __at(0x4FE);
[; ;pic12f675.h: 1493: extern volatile __bit ADFM __at(0xFF);
[; ;pic12f675.h: 1496: extern volatile __bit ADIE __at(0x466);
[; ;pic12f675.h: 1499: extern volatile __bit ADIF __at(0x66);
[; ;pic12f675.h: 1502: extern volatile __bit ADON __at(0xF8);
[; ;pic12f675.h: 1505: extern volatile __bit ANS0 __at(0x4F8);
[; ;pic12f675.h: 1508: extern volatile __bit ANS1 __at(0x4F9);
[; ;pic12f675.h: 1511: extern volatile __bit ANS2 __at(0x4FA);
[; ;pic12f675.h: 1514: extern volatile __bit ANS3 __at(0x4FB);
[; ;pic12f675.h: 1517: extern volatile __bit CAL0 __at(0x482);
[; ;pic12f675.h: 1520: extern volatile __bit CAL1 __at(0x483);
[; ;pic12f675.h: 1523: extern volatile __bit CAL2 __at(0x484);
[; ;pic12f675.h: 1526: extern volatile __bit CAL3 __at(0x485);
[; ;pic12f675.h: 1529: extern volatile __bit CAL4 __at(0x486);
[; ;pic12f675.h: 1532: extern volatile __bit CAL5 __at(0x487);
[; ;pic12f675.h: 1535: extern volatile __bit CARRY __at(0x18);
[; ;pic12f675.h: 1538: extern volatile __bit CHS0 __at(0xFA);
[; ;pic12f675.h: 1541: extern volatile __bit CHS1 __at(0xFB);
[; ;pic12f675.h: 1544: extern volatile __bit CINV __at(0xCC);
[; ;pic12f675.h: 1547: extern volatile __bit CIS __at(0xCB);
[; ;pic12f675.h: 1550: extern volatile __bit CM0 __at(0xC8);
[; ;pic12f675.h: 1553: extern volatile __bit CM1 __at(0xC9);
[; ;pic12f675.h: 1556: extern volatile __bit CM2 __at(0xCA);
[; ;pic12f675.h: 1559: extern volatile __bit CMIE __at(0x463);
[; ;pic12f675.h: 1562: extern volatile __bit CMIF __at(0x63);
[; ;pic12f675.h: 1565: extern volatile __bit COUT __at(0xCE);
[; ;pic12f675.h: 1568: extern volatile __bit DC __at(0x19);
[; ;pic12f675.h: 1571: extern volatile __bit EEIE __at(0x467);
[; ;pic12f675.h: 1574: extern volatile __bit EEIF __at(0x67);
[; ;pic12f675.h: 1577: extern volatile __bit GIE __at(0x5F);
[; ;pic12f675.h: 1580: extern volatile __bit GO __at(0xF9);
[; ;pic12f675.h: 1583: extern volatile __bit GO_DONE __at(0xF9);
[; ;pic12f675.h: 1586: extern volatile __bit GO_nDONE __at(0xF9);
[; ;pic12f675.h: 1589: extern volatile __bit GP0 __at(0x28);
[; ;pic12f675.h: 1592: extern volatile __bit GP1 __at(0x29);
[; ;pic12f675.h: 1595: extern volatile __bit GP2 __at(0x2A);
[; ;pic12f675.h: 1598: extern volatile __bit GP3 __at(0x2B);
[; ;pic12f675.h: 1601: extern volatile __bit GP4 __at(0x2C);
[; ;pic12f675.h: 1604: extern volatile __bit GP5 __at(0x2D);
[; ;pic12f675.h: 1607: extern volatile __bit GPIE __at(0x5B);
[; ;pic12f675.h: 1610: extern volatile __bit GPIF __at(0x58);
[; ;pic12f675.h: 1613: extern volatile __bit GPIO0 __at(0x28);
[; ;pic12f675.h: 1616: extern volatile __bit GPIO1 __at(0x29);
[; ;pic12f675.h: 1619: extern volatile __bit GPIO2 __at(0x2A);
[; ;pic12f675.h: 1622: extern volatile __bit GPIO3 __at(0x2B);
[; ;pic12f675.h: 1625: extern volatile __bit GPIO4 __at(0x2C);
[; ;pic12f675.h: 1628: extern volatile __bit GPIO5 __at(0x2D);
[; ;pic12f675.h: 1631: extern volatile __bit INTE __at(0x5C);
[; ;pic12f675.h: 1634: extern volatile __bit INTEDG __at(0x40E);
[; ;pic12f675.h: 1637: extern volatile __bit INTF __at(0x59);
[; ;pic12f675.h: 1640: extern volatile __bit IOC0 __at(0x4B0);
[; ;pic12f675.h: 1643: extern volatile __bit IOC1 __at(0x4B1);
[; ;pic12f675.h: 1646: extern volatile __bit IOC2 __at(0x4B2);
[; ;pic12f675.h: 1649: extern volatile __bit IOC3 __at(0x4B3);
[; ;pic12f675.h: 1652: extern volatile __bit IOC4 __at(0x4B4);
[; ;pic12f675.h: 1655: extern volatile __bit IOC5 __at(0x4B5);
[; ;pic12f675.h: 1658: extern volatile __bit IOCB0 __at(0x4B0);
[; ;pic12f675.h: 1661: extern volatile __bit IOCB1 __at(0x4B1);
[; ;pic12f675.h: 1664: extern volatile __bit IOCB2 __at(0x4B2);
[; ;pic12f675.h: 1667: extern volatile __bit IOCB3 __at(0x4B3);
[; ;pic12f675.h: 1670: extern volatile __bit IOCB4 __at(0x4B4);
[; ;pic12f675.h: 1673: extern volatile __bit IOCB5 __at(0x4B5);
[; ;pic12f675.h: 1676: extern volatile __bit IRP __at(0x1F);
[; ;pic12f675.h: 1679: extern volatile __bit PEIE __at(0x5E);
[; ;pic12f675.h: 1682: extern volatile __bit PS0 __at(0x408);
[; ;pic12f675.h: 1685: extern volatile __bit PS1 __at(0x409);
[; ;pic12f675.h: 1688: extern volatile __bit PS2 __at(0x40A);
[; ;pic12f675.h: 1691: extern volatile __bit PSA __at(0x40B);
[; ;pic12f675.h: 1694: extern volatile __bit RD __at(0x4E0);
[; ;pic12f675.h: 1697: extern volatile __bit RP0 __at(0x1D);
[; ;pic12f675.h: 1700: extern volatile __bit RP1 __at(0x1E);
[; ;pic12f675.h: 1703: extern volatile __bit T0CS __at(0x40D);
[; ;pic12f675.h: 1706: extern volatile __bit T0IE __at(0x5D);
[; ;pic12f675.h: 1709: extern volatile __bit T0IF __at(0x5A);
[; ;pic12f675.h: 1712: extern volatile __bit T0SE __at(0x40C);
[; ;pic12f675.h: 1715: extern volatile __bit T1CKPS0 __at(0x84);
[; ;pic12f675.h: 1718: extern volatile __bit T1CKPS1 __at(0x85);
[; ;pic12f675.h: 1721: extern volatile __bit T1IE __at(0x460);
[; ;pic12f675.h: 1724: extern volatile __bit T1IF __at(0x60);
[; ;pic12f675.h: 1727: extern volatile __bit T1OSCEN __at(0x83);
[; ;pic12f675.h: 1730: extern volatile __bit TMR0IE __at(0x5D);
[; ;pic12f675.h: 1733: extern volatile __bit TMR0IF __at(0x5A);
[; ;pic12f675.h: 1736: extern volatile __bit TMR1CS __at(0x81);
[; ;pic12f675.h: 1739: extern volatile __bit TMR1GE __at(0x86);
[; ;pic12f675.h: 1742: extern volatile __bit TMR1IE __at(0x460);
[; ;pic12f675.h: 1745: extern volatile __bit TMR1IF __at(0x60);
[; ;pic12f675.h: 1748: extern volatile __bit TMR1ON __at(0x80);
[; ;pic12f675.h: 1751: extern volatile __bit TRISIO0 __at(0x428);
[; ;pic12f675.h: 1754: extern volatile __bit TRISIO1 __at(0x429);
[; ;pic12f675.h: 1757: extern volatile __bit TRISIO2 __at(0x42A);
[; ;pic12f675.h: 1760: extern volatile __bit TRISIO3 __at(0x42B);
[; ;pic12f675.h: 1763: extern volatile __bit TRISIO4 __at(0x42C);
[; ;pic12f675.h: 1766: extern volatile __bit TRISIO5 __at(0x42D);
[; ;pic12f675.h: 1769: extern volatile __bit VCFG __at(0xFE);
[; ;pic12f675.h: 1772: extern volatile __bit VR0 __at(0x4C8);
[; ;pic12f675.h: 1775: extern volatile __bit VR1 __at(0x4C9);
[; ;pic12f675.h: 1778: extern volatile __bit VR2 __at(0x4CA);
[; ;pic12f675.h: 1781: extern volatile __bit VR3 __at(0x4CB);
[; ;pic12f675.h: 1784: extern volatile __bit VREN __at(0x4CF);
[; ;pic12f675.h: 1787: extern volatile __bit VRR __at(0x4CD);
[; ;pic12f675.h: 1790: extern volatile __bit WPU0 __at(0x4A8);
[; ;pic12f675.h: 1793: extern volatile __bit WPU1 __at(0x4A9);
[; ;pic12f675.h: 1796: extern volatile __bit WPU2 __at(0x4AA);
[; ;pic12f675.h: 1799: extern volatile __bit WPU4 __at(0x4AC);
[; ;pic12f675.h: 1802: extern volatile __bit WPU5 __at(0x4AD);
[; ;pic12f675.h: 1805: extern volatile __bit WR __at(0x4E1);
[; ;pic12f675.h: 1808: extern volatile __bit WREN __at(0x4E2);
[; ;pic12f675.h: 1811: extern volatile __bit WRERR __at(0x4E3);
[; ;pic12f675.h: 1814: extern volatile __bit ZERO __at(0x1A);
[; ;pic12f675.h: 1817: extern volatile __bit nBOD __at(0x470);
[; ;pic12f675.h: 1820: extern volatile __bit nBOR __at(0x470);
[; ;pic12f675.h: 1823: extern volatile __bit nDONE __at(0xF9);
[; ;pic12f675.h: 1826: extern volatile __bit nGPPU __at(0x40F);
[; ;pic12f675.h: 1829: extern volatile __bit nPD __at(0x1B);
[; ;pic12f675.h: 1832: extern volatile __bit nPOR __at(0x471);
[; ;pic12f675.h: 1835: extern volatile __bit nT1SYNC __at(0x82);
[; ;pic12f675.h: 1838: extern volatile __bit nTO __at(0x1C);
[; ;pic.h: 76: __attribute__((__unsupported__("The " "FLASH_READ" " macro function is no longer supported. Please use the MPLAB X MCC."))) unsigned char __flash_read(unsigned short addr);
[; ;pic.h: 78: __attribute__((__unsupported__("The " "FLASH_WRITE" " macro function is no longer supported. Please use the MPLAB X MCC."))) void __flash_write(unsigned short addr, unsigned short data);
[; ;pic.h: 80: __attribute__((__unsupported__("The " "FLASH_ERASE" " macro function is no longer supported. Please use the MPLAB X MCC."))) void __flash_erase(unsigned short addr);
[; ;eeprom_routines.h: 114: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 115: extern unsigned char eeprom_read(unsigned char addr);
[; ;pic.h: 118: extern __bank0 unsigned char __resetbits;
[; ;pic.h: 119: extern __bank0 __bit __powerdown;
[; ;pic.h: 120: extern __bank0 __bit __timeout;
"31 test2.c
[v _counter1 `uc ~T0 @X0 1 e ]
[; ;test2.c: 31: unsigned char counter1;
"32
[v _counter2 `uc ~T0 @X0 1 e ]
[; ;test2.c: 32: unsigned char counter2;
"33
[v _counter4 `uc ~T0 @X0 1 e ]
[; ;test2.c: 33: unsigned char counter4;
"34
[v _counter5 `uc ~T0 @X0 1 e ]
[; ;test2.c: 34: unsigned char counter5;
"35
[v _math `uc ~T0 @X0 1 e ]
[; ;test2.c: 35: unsigned char math;
"37
[v _pause `(v ~T0 @X0 1 ef1`ui ]
{
[; ;test2.c: 37: void pause(unsigned int ms) {
[e :U _pause ]
[v _ms `ui ~T0 @X0 1 r1 ]
[f ]
[; ;test2.c: 38: for (unsigned int i = 0; i < ms; i++) {
"38
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $U 85  ]
[e :U 82 ]
{
[; ;test2.c: 39: _delay((unsigned long)((1)*(4000000/4000.0)));
"39
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"40
}
"38
[e ++ _i -> -> 1 `i `ui ]
[e :U 85 ]
[e $ < _i _ms 82  ]
[e :U 83 ]
"40
}
[; ;test2.c: 40: }
[; ;test2.c: 41: }
"41
[e :UE 81 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"43
[v _main `(v ~T0 @X0 1 ef ]
{
[; ;test2.c: 43: void main(void) {
[e :U _main ]
[f ]
[; ;test2.c: 44: TRISIO = 0b000010;
"44
[e = _TRISIO -> -> 2 `i `uc ]
[; ;test2.c: 46: while (1) {
"46
[e :U 88 ]
{
[; ;test2.c: 47: if (GP3 == 0) {
"47
[e $ ! == -> _GP3 `i -> 0 `i 90  ]
{
[; ;test2.c: 48: pause(3000);
"48
[e ( _pause (1 -> -> 3000 `i `ui ]
"49
}
[; ;test2.c: 49: } else {
[e $U 91  ]
[e :U 90 ]
{
[; ;test2.c: 50: for (counter5 = 255; counter5 != 255u; counter5--) {
"50
{
[e = _counter5 -> -> 255 `i `uc ]
[e $ != -> _counter5 `ui -> 255 `ui 92  ]
[e $U 93  ]
[e :U 92 ]
{
[; ;test2.c: 51: GP4 = 0;
"51
[e = _GP4 -> -> 0 `i `b ]
[; ;test2.c: 52: GP2 = 0;
"52
[e = _GP2 -> -> 0 `i `b ]
[; ;test2.c: 53: math = 255u - counter5;
"53
[e = _math -> - -> 255 `ui -> _counter5 `ui `uc ]
[; ;test2.c: 54: pause(math);
"54
[e ( _pause (1 -> _math `ui ]
[; ;test2.c: 55: GP4 = 1;
"55
[e = _GP4 -> -> 1 `i `b ]
[; ;test2.c: 56: GP2 = 1;
"56
[e = _GP2 -> -> 1 `i `b ]
[; ;test2.c: 57: pause(math);
"57
[e ( _pause (1 -> _math `ui ]
[; ;test2.c: 58: if (GP3 == 0) {
"58
[e $ ! == -> _GP3 `i -> 0 `i 95  ]
{
[; ;test2.c: 59: break;
"59
[e $U 93  ]
"60
}
[e :U 95 ]
"61
}
"50
[e -- _counter5 -> -> 1 `i `uc ]
[e $ != -> _counter5 `ui -> 255 `ui 92  ]
[e :U 93 ]
"61
}
[; ;test2.c: 60: }
[; ;test2.c: 61: }
[; ;test2.c: 63: for (counter5 = 255; counter5 !=255 ; counter5--) {
"63
{
[e = _counter5 -> -> 255 `i `uc ]
[e $ != -> _counter5 `i -> 255 `i 96  ]
[e $U 97  ]
[e :U 96 ]
{
[; ;test2.c: 64: GP4 = 0;
"64
[e = _GP4 -> -> 0 `i `b ]
[; ;test2.c: 65: GP2 = 0;
"65
[e = _GP2 -> -> 0 `i `b ]
[; ;test2.c: 66: math = (unsigned)math + 1;
"66
[e = _math -> + -> _math `ui -> -> 1 `i `ui `uc ]
[; ;test2.c: 67: pause(math);
"67
[e ( _pause (1 -> _math `ui ]
[; ;test2.c: 68: GP4 = 1;
"68
[e = _GP4 -> -> 1 `i `b ]
[; ;test2.c: 69: GP2 = 1;
"69
[e = _GP2 -> -> 1 `i `b ]
[; ;test2.c: 70: pause(math);
"70
[e ( _pause (1 -> _math `ui ]
[; ;test2.c: 71: if (GP3 == 0) {
"71
[e $ ! == -> _GP3 `i -> 0 `i 99  ]
{
[; ;test2.c: 72: break;
"72
[e $U 97  ]
"73
}
[e :U 99 ]
"74
}
"63
[e -- _counter5 -> -> 1 `i `uc ]
[e $ != -> _counter5 `i -> 255 `i 96  ]
[e :U 97 ]
"74
}
"75
}
[e :U 91 ]
[; ;test2.c: 73: }
[; ;test2.c: 74: }
[; ;test2.c: 75: }
[; ;test2.c: 78: for (counter1 = 1; (unsigned)counter1 <= 25; counter1++) {
"78
{
[e = _counter1 -> -> 1 `i `uc ]
[e $ <= -> _counter1 `ui -> -> 25 `i `ui 100  ]
[e $U 101  ]
[e :U 100 ]
{
[; ;test2.c: 79: GP4 = 1;
"79
[e = _GP4 -> -> 1 `i `b ]
[; ;test2.c: 80: GP2 = 0;
"80
[e = _GP2 -> -> 0 `i `b ]
[; ;test2.c: 81: pause(100);
"81
[e ( _pause (1 -> -> 100 `i `ui ]
[; ;test2.c: 82: GP2 = 1;
"82
[e = _GP2 -> -> 1 `i `b ]
[; ;test2.c: 83: GP4 = 0;
"83
[e = _GP4 -> -> 0 `i `b ]
[; ;test2.c: 84: pause(100);
"84
[e ( _pause (1 -> -> 100 `i `ui ]
"85
}
"78
[e ++ _counter1 -> -> 1 `i `uc ]
[e $ <= -> _counter1 `ui -> -> 25 `i `ui 100  ]
[e :U 101 ]
"85
}
[; ;test2.c: 85: }
[; ;test2.c: 87: for (counter2 = 1; (unsigned)counter2 <= 59; counter2++) {
"87
{
[e = _counter2 -> -> 1 `i `uc ]
[e $ <= -> _counter2 `ui -> -> 59 `i `ui 103  ]
[e $U 104  ]
[e :U 103 ]
{
[; ;test2.c: 88: GP4 = 0;
"88
[e = _GP4 -> -> 0 `i `b ]
[; ;test2.c: 89: GP2 = 0;
"89
[e = _GP2 -> -> 0 `i `b ]
[; ;test2.c: 90: pause(58000);
"90
[e ( _pause (1 -> -> 58000 `l `ui ]
[; ;test2.c: 91: for (counter4 = 1; (unsigned)counter4 <= 50; counter4++) {
"91
{
[e = _counter4 -> -> 1 `i `uc ]
[e $ <= -> _counter4 `ui -> -> 50 `i `ui 106  ]
[e $U 107  ]
[e :U 106 ]
{
[; ;test2.c: 92: GP4 = 1;
"92
[e = _GP4 -> -> 1 `i `b ]
[; ;test2.c: 93: GP2 = 0;
"93
[e = _GP2 -> -> 0 `i `b ]
[; ;test2.c: 94: pause(50);
"94
[e ( _pause (1 -> -> 50 `i `ui ]
[; ;test2.c: 95: GP2 = 1;
"95
[e = _GP2 -> -> 1 `i `b ]
[; ;test2.c: 96: GP4 = 0;
"96
[e = _GP4 -> -> 0 `i `b ]
[; ;test2.c: 97: pause(50);
"97
[e ( _pause (1 -> -> 50 `i `ui ]
"98
}
"91
[e ++ _counter4 -> -> 1 `i `uc ]
[e $ <= -> _counter4 `ui -> -> 50 `i `ui 106  ]
[e :U 107 ]
"98
}
"99
}
"87
[e ++ _counter2 -> -> 1 `i `uc ]
[e $ <= -> _counter2 `ui -> -> 59 `i `ui 103  ]
[e :U 104 ]
"99
}
[; ;test2.c: 98: }
[; ;test2.c: 99: }
[; ;test2.c: 101: while (1) {
"101
[e :U 110 ]
{
[; ;test2.c: 102: GP4 = 1;
"102
[e = _GP4 -> -> 1 `i `b ]
[; ;test2.c: 103: GP2 = 0;
"103
[e = _GP2 -> -> 0 `i `b ]
[; ;test2.c: 104: pause(750);
"104
[e ( _pause (1 -> -> 750 `i `ui ]
[; ;test2.c: 105: GP2 = 1;
"105
[e = _GP2 -> -> 1 `i `b ]
[; ;test2.c: 106: GP4 = 0;
"106
[e = _GP4 -> -> 0 `i `b ]
[; ;test2.c: 107: pause(750);
"107
[e ( _pause (1 -> -> 750 `i `ui ]
"108
}
[e :U 109 ]
"101
[e $U 110  ]
[e :U 111 ]
[; ;test2.c: 108: }
[; ;test2.c: 110: GP4 = 0;
"110
[e = _GP4 -> -> 0 `i `b ]
[; ;test2.c: 111: GP2 = 0;
"111
[e = _GP2 -> -> 0 `i `b ]
"112
}
[e :U 87 ]
"46
[e $U 88  ]
[e :U 89 ]
[; ;test2.c: 112: }
[; ;test2.c: 113: }
"113
[e :UE 86 ]
}
